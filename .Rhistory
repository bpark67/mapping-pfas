lm(dfoi$ruptured ~ dfoi$loc_group)
mod = lm(dfoi$ruptured ~ dfoi$loc_group)
summary(mod)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(multispeciesPP)
library(randomForest)
df = read.csv("data/pfas data.csv")
ext = read.csv("data/extrapolation data.csv")
setwd("~/Desktop/GEOSCI Research/Github Repo")
View(df)
df %>%
ggplot(aes(x = Concentration)) +
geom_histogram()
df %>%
ggplot(aes(x = log(Concentration + 1))) +
geom_histogram()
df %>%
ggplot(aes(x = log(Concentration + 1))) +
geom_histogram() +
geom_vline(xintercept = log(8 + 1), color = "red")
df %>%
ggplot(aes(x = log(Concentration + 1))) +
geom_histogram(bins = 20) +
geom_vline(xintercept = log(8 + 1), color = "red")
df %>%
ggplot(aes(x = log(Concentration + 1))) +
geom_histogram(bins = 30) +
geom_vline(xintercept = log(8 + 1), color = "red")
df %>%
ggplot(aes(x = log(Concentration + 1))) +
geom_histogram(bins = 25) +
geom_vline(xintercept = log(8 + 1), color = "red")
df %>%
ggplot(aes(x = log(Concentration + 1))) +
geom_histogram(bins = 26) +
geom_vline(xintercept = log(8 + 1), color = "red")
df %>%
ggplot(aes(x = log(Concentration + 1))) +
geom_histogram(bins = 27) +
geom_vline(xintercept = log(8 + 1), color = "red")
df %>%
ggplot(aes(x = log(Concentration + 1))) +
geom_histogram(bins = 28) +
geom_vline(xintercept = log(8 + 1), color = "red")
df %>%
ggplot(aes(x = log(Concentration + 1))) +
geom_histogram(bins = 28) +
geom_vline(xintercept = log(8 + 1), color = "red") +
theme_bw()
df %>%
ggplot(aes(x = log(Concentration + 1))) +
geom_histogram(bins = 28) +
geom_vline(xintercept = log(8 + 1), color = "red") +
theme_bw() +
labs(title = "Histogram of PFAS Concentrations",
x = "Log(PFAS Concentration + 1)",
y = "Frequency")
df %>%
ggplot(aes(x = log(Concentration + 1))) +
geom_histogram(bins = 32) +
geom_vline(xintercept = log(8 + 1), color = "red") +
theme_bw() +
labs(title = "Histogram of PFAS Concentrations",
x = "Log(PFAS Concentration + 1)",
y = "Frequency")
df %>%
ggplot(aes(x = log(Concentration + 1))) +
geom_histogram(bins = 33) +
geom_vline(xintercept = log(8 + 1), color = "red") +
theme_bw() +
labs(title = "Histogram of PFAS Concentrations",
x = "Log(PFAS Concentration + 1)",
y = "Frequency")
df %>%
ggplot(aes(x = log(Concentration + 1))) +
geom_histogram(bins = 34) +
geom_vline(xintercept = log(8 + 1), color = "red") +
theme_bw() +
labs(title = "Histogram of PFAS Concentrations",
x = "Log(PFAS Concentration + 1)",
y = "Frequency")
df %>%
ggplot(aes(x = log(Concentration + 1))) +
geom_histogram(bins = 34) +
geom_vline(xintercept = log(8 + 1), color = "red") +
theme_bw() +
labs(title = "Histogram of PFAS Concentrations",
x = "Log(PFAS Concentration + 1)",
y = "Frequency") +
annotate("text", x = log(8 + 1), y = 100, label = "Detection Threshold")
df %>%
ggplot(aes(x = log(Concentration + 1))) +
geom_histogram(bins = 34) +
geom_vline(xintercept = log(8 + 1), color = "red") +
theme_bw() +
labs(title = "Histogram of PFAS Concentrations",
x = "Log(PFAS Concentration + 1)",
y = "Frequency") +
annotate("text", x = log(8 + 1), y = 1500, label = "Detection Threshold")
df %>%
ggplot(aes(x = log(Concentration + 1))) +
geom_histogram(bins = 34) +
geom_vline(xintercept = log(8 + 1), color = "red") +
theme_bw() +
labs(title = "Histogram of PFAS Concentrations",
x = "Log(PFAS Concentration + 1)",
y = "Frequency") +
annotate("text", x = log(8 + 1), y = 1500, label = "Detection Threshold",
color = "red")
df %>%
ggplot(aes(x = log(Concentration + 1))) +
geom_histogram(bins = 34) +
geom_vline(xintercept = log(8 + 1), color = "red") +
theme_bw() +
labs(title = "Histogram of PFAS Concentrations",
x = "Log(PFAS Concentration + 1)",
y = "Frequency") +
annotate("text", x = log(8 + 1), y = 1500, label = "Detection Threshold",
color = "red", angle = 90)
df %>%
ggplot(aes(x = log(Concentration + 1))) +
geom_histogram(bins = 34) +
geom_vline(xintercept = log(8 + 1), color = "red") +
theme_bw() +
labs(title = "Histogram of PFAS Concentrations",
x = "Log(PFAS Concentration + 1)",
y = "Frequency") +
annotate("text", x = log(8 + 1), y = 1500, label = "Detection Threshold",
color = "red", angle = -90)
df %>%
ggplot(aes(x = log(Concentration + 1))) +
geom_histogram(bins = 34) +
geom_vline(xintercept = log(8 + 1), color = "red") +
theme_bw() +
labs(title = "Histogram of PFAS Concentrations",
x = "Log(PFAS Concentration + 1)",
y = "Frequency") +
annotate("text", x = log(8 + 1) + 0.5, y = 1500, label = "Detection Threshold",
color = "red", angle = -90)
df %>%
ggplot(aes(x = log(Concentration + 1))) +
geom_histogram(bins = 34) +
geom_vline(xintercept = log(8 + 1), color = "red") +
theme_bw() +
labs(title = "Histogram of PFAS Concentrations",
x = "Log(PFAS Concentration + 1)",
y = "Frequency") +
annotate("text", x = log(8 + 1) + 0.2, y = 1500, label = "Detection Threshold",
color = "red", angle = -90)
df %>%
ggplot(aes(x = log(Concentration + 1))) +
geom_histogram(bins = 34) +
geom_vline(xintercept = log(8 + 1), color = "red") +
theme_bw() +
labs(title = "Histogram of PFAS Concentrations",
x = "Log(PFAS Concentration + 1)",
y = "Frequency") +
annotate("text", x = log(8 + 1) + 0.2, y = 1500, label = "Detection Threshold",
color = "red", angle = -90, size = 1)
df %>%
ggplot(aes(x = log(Concentration + 1))) +
geom_histogram(bins = 34) +
geom_vline(xintercept = log(8 + 1), color = "red") +
theme_bw() +
labs(title = "Histogram of PFAS Concentrations",
x = "Log(PFAS Concentration + 1)",
y = "Frequency") +
annotate("text", x = log(8 + 1) + 0.2, y = 1500, label = "Detection Threshold",
color = "red", angle = -90, size = 3)
df %>%
ggplot(aes(x = log(Concentration + 1))) +
geom_histogram(bins = 34) +
geom_vline(xintercept = log(8 + 1), color = "red") +
theme_bw() +
labs(title = "Histogram of PFAS Concentrations",
x = "Log(PFAS Concentration + 1)",
y = "Frequency") +
annotate("text", x = log(8 + 1) + 0.2, y = 1200, label = "Detection Threshold",
color = "red", angle = -90, size = 3)
df %>%
ggplot(aes(x = log(Concentration + 1))) +
geom_histogram(bins = 34) +
geom_vline(xintercept = log(8 + 1), color = "red") +
theme_bw() +
labs(title = "Histogram of PFAS Concentrations",
x = "Log(PFAS Concentration + 1)",
y = "Frequency") +
annotate("text", x = log(8 + 1) + 0.2, y = 1300, label = "Detection Threshold",
color = "red", angle = -90, size = 3)
?scale_fill_jama
??scale_fill_jama
ggsci::pal_jama()
ggsci::pal_jama(1)
?ggsci::pal_jama()
ggsci::pal_jama("default")
df %>%
ggplot(aes(x = log(Concentration + 1))) +
geom_histogram(bins = 34, fill = "cornflowerblue") +
geom_vline(xintercept = log(8 + 1), color = "red") +
theme_bw() +
labs(title = "Histogram of PFAS Concentrations",
x = "Log(PFAS Concentration + 1)",
y = "Frequency") +
annotate("text", x = log(8 + 1) + 0.2, y = 1300, label = "Detection Threshold",
color = "red", angle = -90, size = 3)
?ggsave
ggsave("figures/svg/pfas_concentration.eps", p, width = 8, height = 6)
p = df %>%
ggplot(aes(x = log(Concentration + 1))) +
geom_histogram(bins = 34, fill = "cornflowerblue") +
geom_vline(xintercept = log(8 + 1), color = "red") +
theme_bw() +
labs(title = "Histogram of PFAS Concentrations",
x = "Log(PFAS Concentration + 1)",
y = "Frequency") +
annotate("text", x = log(8 + 1) + 0.2, y = 1300, label = "Detection Threshold",
color = "red", angle = -90, size = 3)
ggsave("figures/svg/pfas_concentration.eps", p, width = 8, height = 6)
p = df %>%
ggplot(aes(x = log(Concentration + 1))) +
geom_histogram(bins = 34, fill = "cornflowerblue") +
geom_vline(xintercept = log(8 + 1), color = "red") +
theme_bw() +
labs(title = "Histogram of PFAS Concentrations",
x = "Log(PFAS Concentration + 1)",
y = "Frequency") +
annotate("text", x = log(8 + 1) + 0.2, y = 1300, label = "Detection Threshold",
color = "red", angle = -90, size = 3)
ggsave("figures/svg/PFASConcentration.eps", p, width = 8, height = 6)
df %>%
head(3)
df %>%
dplyr::sample_n(3)
df %>%
dplyr::sample_n(3) %>%
kable("latex", booktabs = T, caption = "Sample of PFAS Data")
df %>%
dplyr::sample_n(3) %>%
knitr::kable("latex", booktabs = T, caption = "Sample of PFAS Data")
range(df$PopDen)
16^2
df %>%
select(1:10) %>%
dplyr::sample_n(3) %>%
knitr::kable("latex", booktabs = T, caption = "Sample of PFAS Data")
df %>%
select(1:10) %>%
dplyr::sample_n(3) %>%
knitr::kable("latex", booktabs = T, caption = "Sample of PFAS Data")
df %>%
select(1:10) %>% dim
df %>%
select(1:10) %>%
dplyr::sample_n(3) %>%
knitr::kable("latex", booktabs = T, caption = "Sample of PFAS Data")
set.seed(16)
df %>%
select(11:19) %>%
dplyr::sample_n(3) %>%
knitr::kable("latex", booktabs = T, caption = "Sample of PFAS Data")
df %>%
#  select(1:10) %>%
dplyr::sample_n(3) %>%
knitr::kable("latex", booktabs = T, caption = "Sample of PFAS Data")
df %>%
#  select(1:10) %>%
dplyr::sample_n(3) %>%
knitr::kable("latex", booktabs = T, caption = "Sample of PFAS Data")
set.seed(16)
df %>%
#  select(1:10) %>%
dplyr::sample_n(3) %>%
knitr::kable("latex", booktabs = T, caption = "Sample of PFAS Data")
df %>%
select(11:18) %>%
round(2) %>%
mutate(State = df$STUSPS) %>%
dplyr::sample_n(3) %>%
knitr::kable("latex", booktabs = T, caption = "Sample of PFAS Data")
set.seed(16)
df %>%
round(2) %>%
select(1:10) %>%
dplyr::sample_n(3) %>%
knitr::kable("latex", booktabs = T, caption = "Sample of PFAS Data")
set.seed(16)
df %>%
select(1:10) %>%
round(2) %>%
dplyr::sample_n(3) %>%
knitr::kable("latex", booktabs = T, caption = "Sample of PFAS Data")
set.seed(16)
df %>%
select(11:18) %>%
round(2) %>%
mutate(State = df$STUSPS) %>%
dplyr::sample_n(3) %>%
knitr::kable("latex", booktabs = T, caption = "Sample of PFAS Data")
knitr::opts_chunk$set(echo = TRUE)
library(raster)
map = raster("figures/tiff/100% Intensity.tif")
plot(map)
install.packages("leaflet")
install.packages("leaflet")
library(leaflet)
knitr::opts_chunk$set(echo = TRUE)
library(raster)
library(leaflet)
library(sf)
usa = sf::read_sf("mapping/shapefiles/CONUS/cb_2018_us_state_500k.shp")
knitr::opts_chunk$set(echo = TRUE)
library(raster)
library(leaflet)
library(sf)
library(tidyverse)
usa = sf::read_sf("mapping/shapefiles/CONUS/cb_2018_us_state_500k.shp",
stringsAsFactors = FALSE) %>%
as_Spatial() %>%
st_as_sf() %>%
st_transform(dst = "OGC:CRS84")
usa %>%
ggplot() +
geom_sf(fill = "white", color = "black") +
theme_minimal()
usa %>%
ggplot() +
geom_sf(fill = "white", color = "black")+
theme_bw() +
coord_sf() +
xlab("") +
ylab("") +
theme(legend.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
rast = raster("figures/tiff/100% Intensity.tif")
rast_spdf = as(rast, "SpatialPixelsDataFrame")
rast_df = as(rast, "SpatialPixelsDataFrame") %>%
as.data.frame()
?geom_raster
usa %>%
ggplot() +
geom_sf(fill = "white", color = "black")+
geom_raster(data = rast) +
theme_bw() +
coord_sf() +
xlab("") +
ylab("") +
theme(legend.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
usa %>%
ggplot() +
geom_sf(fill = "white", color = "black")+
geom_raster(data = rast_df, aes(x = x, y = y, fill = layer)) +
theme_bw() +
coord_sf() +
xlab("") +
ylab("") +
theme(legend.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
usa %>%
ggplot() +
geom_sf(fill = "white", color = "black")+
geom_tile(data = rast_df, aes(x = x, y = y, fill = value), alpha = 0.8) +
theme_bw() +
coord_sf() +
xlab("") +
ylab("") +
theme(legend.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
View(rast_df)
usa %>%
ggplot() +
geom_sf(fill = "white", color = "black")+
geom_tile(data = rast_df, aes(x = x, y = y, fill = X100..Intensity), alpha = 0.8) +
theme_bw() +
coord_sf() +
xlab("") +
ylab("") +
theme(legend.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
usa %>%
ggplot() +
geom_sf(fill = "white", color = "black")+
geom_tile(data = rast_df, aes(x = x, y = y, fill = X100..Intensity), alpha = 0.8) +
scico::scale_fill_scico(palette = "lapaz", direction = -1) +
theme_bw() +
coord_sf() +
xlab("") +
ylab("") +
theme(legend.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
quantile(rast_df$X100..Intensity)
?quantile
quantile(rast_df$X100..Intensity, probs = c(0.5, 0.75, 0.9, 0.99))
quants = quantile(rast_df$X100..Intensity, probs = c(0.5, 0.75, 0.9, 0.99))
colorbreaker = function(var){
if (var < quants[1]){
return(1)
} else if (quants[1] <= var & var< quants[2]){
return(2)
} else if (quants[2] <= var & var < quants[3]){
return(3)
} else if (quants[3] <= var & var < quants[4]){
return(4)
} else if (quants[4] <= var){
return(5)
}
}
plotclr = scico(5, palette = "lapaz", direction = -1)
plotclr = scico::scico(5, palette = "lapaz", direction = -1)
names(plotclr) = as.factor(1:6)
names(plotclr) = as.factor(1:5)
rast_df$colornum = sapply(rast_df$X100..Intensity, colorbreaker)
table(rast_df$colornum)
plotclr
usa %>%
ggplot() +
geom_sf(fill = "white", color = "black")+
geom_tile(data = rast_df, aes(x = x, y = y, fill = colornum), alpha = 0.8) +
scale_fill_manual(values = plotclr,
labels = c("50%-", "50%+", "75%+", "90%+", "99%+")) +
theme_bw() +
coord_sf() +
xlab("") +
ylab("") +
theme(legend.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
rast_df$colornum = sapply(rast_df$X100..Intensity, colorbreaker) %>% as.factor
usa %>%
ggplot() +
geom_sf(fill = "white", color = "black")+
geom_tile(data = rast_df, aes(x = x, y = y, fill = colornum), alpha = 0.8) +
scale_fill_manual(values = plotclr,
labels = c("50%-", "50%+", "75%+", "90%+", "99%+")) +
theme_bw() +
coord_sf() +
xlab("") +
ylab("") +
theme(legend.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
knitr::opts_chunk$set(echo = F, dev = "png")
library(raster)
library(sf)
library(tidyverse)
usa = sf::read_sf("mapping/shapefiles/CONUS/cb_2018_us_state_500k.shp",
stringsAsFactors = FALSE) %>%
as_Spatial() %>%
st_as_sf() %>%
st_transform(dst = "OGC:CRS84")
rast = raster("figures/tiff/100% Intensity.tif")
rast_df = as(rast, "SpatialPixelsDataFrame") %>%
as.data.frame()
quants = quantile(rast_df$X100..Intensity, probs = c(0.5, 0.75, 0.9, 0.99))
colorbreaker = function(var){
if (var < quants[1]){
return(1)
} else if (quants[1] <= var & var< quants[2]){
return(2)
} else if (quants[2] <= var & var < quants[3]){
return(3)
} else if (quants[3] <= var & var < quants[4]){
return(4)
} else if (quants[4] <= var){
return(5)
}
}
rast_df$colornum = sapply(rast_df$X100..Intensity, colorbreaker) %>% as.factor
plotclr = scico::scico(5, palette = "lapaz", direction = -1)
names(plotclr) = as.factor(1:5)
usa %>%
ggplot() +
geom_sf(fill = "white", color = "black")+
geom_tile(data = rast_df, aes(x = x, y = y, fill = colornum), alpha = 0.8) +
scale_fill_manual(values = plotclr,
labels = c("< 50th Percentile",
"> 50th Percentile",
"> 75th Percentile",
"> 90th Percentile",
"> 99th Percentile")) +
theme_bw() +
coord_sf() +
xlab("") +
ylab("") +
theme(legend.title = element_blank(),
panel.grid = element_blank(),
panel.border = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
